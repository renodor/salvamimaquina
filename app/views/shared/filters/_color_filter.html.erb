<!-- TODO: can be refacto in the same partial with capacity_filter, and model_filter -->
<% color_text_to_option_id = checkbox_product_filter('color') %>
<% if color_text_to_option_id.present? %>
  <% color_option_type = Spree::OptionType.find_by(name: 'color') %>
  <% hexa_color_code_to_option_ids = map_color_texts_to_hexa_color_codes(color_text_to_option_id) %>
  <div class="product-filter" data-spec="color-filter">
    <div class="product-filter-content">
      <h6 class="product-filter-title"><%= t('spree.color', count: hexa_color_code_to_option_ids.size) %></h6>
      <div id="color-filter" class="color-badges">
        <% hexa_color_code_to_option_ids.each do |color_code, option_ids| %>
          <% option_ids.each do |color_id| %>
            <input type="checkbox"
                    id="<%= option_ids.sort %>"
                    name="<%= "products_filters[search[with_option][#{color_option_type.id}]][]" %>"
                    value="<%= color_id %>"
                    data-action="change->products-filters-form#inputChanged"
                    data-products-filters-form-target="colorInput"
                    data-related-ids="<%= option_ids - [color_id] %>"
                    <%= params.dig(:search, :with_option, color_option_type.id.to_s)&.include?(color_id.to_s) ? "checked" : "" %>
            />      <!-- Not sure that this previous line works properly with labels with 2 inputs... But inputs can't be checked by default no? -->
          <% end %>

          <label
            class="color-filter-label"
            style="background-color: <%= color_code %>;"
            for="<%= option_ids.sort %>"
            data-selected="false"
            data-products-filters-form-target="label"
          >
          </label>
        <% end %>
      </div>
    </div>
  </div>
<% end %>